unit TestuExcelComparer;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, uExcelComparer, System.IniFiles;

type
  // Test methods for class TExcelComparer

  TestTExcelComparer = class(TTestCase)
  strict private
    FExcelComparer: TExcelComparer;
  private
    FIni: TIniFile;
  public
    procedure SetUp; override;
    procedure TearDown; override;
    //1 IniFile storing test config
    property Ini: TIniFile read FIni;
  published
    procedure TestCompareCsv;
    procedure TestCompare;
  end;

implementation

uses
  System.SysUtils;

procedure TestTExcelComparer.SetUp;
begin
  FExcelComparer := TExcelComparer.Create();
  if not FileExists('..\testing\testsett.ini') then
    Status('Test inifile not found in ..\testing\testsett.ini');
  FIni := TIniFile.Create('..\testing\testsett.ini');
end;

procedure TestTExcelComparer.TearDown;
begin
  FreeAndNil(FIni);
  FreeAndNil(FExcelComparer);
end;

procedure TestTExcelComparer.TestCompareCsv;
const
  C_TestCompare = 'TestCompareCsv';
var
  ReturnValue: RExcelDifference;
  AFile1,AFile2,AFile3: string;
begin
  AFile1:= ini.ReadString(C_TestCompare,'File1','42q');
  AFile2:= ini.ReadString(C_TestCompare,'File2','42b');
  AFile3:= ini.ReadString(C_TestCompare,'File3','42c');
  Check(
    FExcelComparer.CompareCSV(AFile1, AFile2, ReturnValue),
    Format('Files [%s] [%s] differ. Sheet (%d) - row (%d). Error message %s.', [
      AFile1,
      AFile2,
      ReturnValue.Sheet,
      ReturnValue.Row,
      QuotedStr(FExcelComparer.LastError)
    ])
  );
  Check(
    not FExcelComparer.CompareCSV(AFile1, AFile3, ReturnValue),
    Format('Files [%s] [%s] Equal. Sheet (%d) - row (%d). Error message %s.', [
      AFile1,
      AFile3,
      ReturnValue.Sheet,
      ReturnValue.Row,
      QuotedStr(FExcelComparer.LastError)
    ])
  );
end;

procedure TestTExcelComparer.TestCompare;
const
  C_TestCompare = 'TestCompare';
var
  ReturnValue: RExcelDifference;
  AFile1,AFile2,AFile3: string;
begin
  AFile1:= ini.ReadString(C_TestCompare,'File1','42q');
  AFile2:= ini.ReadString(C_TestCompare,'File2','42b');
  AFile3:= ini.ReadString(C_TestCompare,'File3','42c');
  Check(
    FExcelComparer.Compare(AFile1, AFile2, ReturnValue),
    Format('Files [%s] [%s] differ. Sheet (%d) - row (%d). Error message %s.', [
      AFile1,
      AFile2,
      ReturnValue.Sheet,
      ReturnValue.Row,
      QuotedStr(FExcelComparer.LastError)
    ])
  );
  Check(
    not FExcelComparer.Compare(AFile1, AFile3, ReturnValue),
    Format('Files [%s] [%s] Equal. Sheet (%d) - row (%d). Error message %s.', [
      AFile1,
      AFile3,
      ReturnValue.Sheet,
      ReturnValue.Row,
      QuotedStr(FExcelComparer.LastError)
    ])
  );
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTExcelComparer.Suite);
end.

